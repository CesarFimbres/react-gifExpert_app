{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","lastCategories","preventDefault","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACC,uBAAMC,SATc,SAACC,GACjBH,EAAWI,OAAOC,OAAS,IAC9BP,GAAc,SAACQ,GAAD,OAAqBN,GAArB,mBAAoCM,OAClDL,EAAc,KAEfE,EAAEI,kBAIF,UACC,8CACA,uBACCC,KAAK,OACLC,YAAY,eACZC,MAAOV,EACPW,SAnBsB,SAACR,GACzBF,EAAcE,EAAES,OAAOF,c,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAcfM,GAde,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACxC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACzB,ECJ2B,SAACA,GAC5B,MAA0Bf,mBAAS,CAClCsB,KAAM,GACNa,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAXAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBC,YAAW,WACVJ,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAER,UAEF,CAACpB,IAEGqB,EDnB2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIJ,UAAU,wCAAd,SACEhB,IAGDoB,GACA,mBAAGJ,UAAU,mCAAb,+BAKD,qBAAKA,UAAU,YAAf,SACEH,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aElBdiB,EAAe,WAG3B,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAUA,OACC,qCACC,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACE6C,EAAWpB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MClBnB8B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.a829fadd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputValue = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((lastCategories) => [inputValue, ...lastCategories]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<h2>Add category</h2>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Type here...\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputValue}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n\t\tcategory,\r\n\t)}&limit=10&api_key=gz6vUnBsxufjSiAmVtTMtkLN0Wf5fyP8`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2 className=\"animate__animated animate__fadeInLeft\">\r\n\t\t\t\t{category}\r\n\t\t\t</h2>\r\n\r\n\t\t\t{loading && (\r\n\t\t\t\t<p className=\"animate__animated animate__flash\">\r\n\t\t\t\t\tLoading images...\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\t// const [images, setImages] = useState([]);\r\n\r\n\t// useEffect(() => {\r\n\t// \tgetGifs(category).then(setImages);\r\n\t// }, [category]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then((imgs) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 1000);\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\t// const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n\tconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n\t// const handleAdd = (params) => {\r\n\t//*De esta manera se puede agregar un elemento al useState\r\n\t// \tsetCategories(['Hunter X Hunter', ...categories]);\r\n\t// \tsetCategories((newCategory) => [...newCategory, 'Mad man']);\r\n\r\n\t// \tconsole.log('categories', categories);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>GifExpertApp</h1>\r\n\t\t\t<hr />\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}